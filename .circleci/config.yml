version: 2.1

jobs:
  job-success:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Successful job
          command: |
            echo "This job will succeed"
            echo "job-success: SUCCESS" > status.txt

  job-fail:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Failing job
          command: |
            echo "This job will fail"
            echo "job-fail: FAILED" > status.txt
            exit 1

  job-fail-2:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Another failing job
          command: |
            echo "This job will also fail"
            echo "job-fail-2: FAILED" > status.txt
            exit 1

  job-random:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Random outcome job
          command: |
            RANDOM_NUM=$((RANDOM % 2))
            if [ $RANDOM_NUM -eq 0 ]; then
              echo "Random job succeeded!"
              exit 0
            else
              echo "Random job failed!"
              exit 1
            fi

  notify:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Check job statuses using CircleCI API
          command: |
            echo "=== Checking Job Statuses via API ==="
            
            # Requires CIRCLE_TOKEN to be set as environment variable
            if [ -z "$CIRCLE_TOKEN" ]; then
              echo "‚ö†Ô∏è  CIRCLE_TOKEN not set, using workspace method instead"
              exit 0
            fi
            
            # Get workflow jobs
            WORKFLOW_JOBS=$(curl -s -H "Circle-Token: ${CIRCLE_TOKEN}" \
              "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/job" | jq -r '.items[]')
            
            # Count failures
            FAILED_COUNT=$(echo "$WORKFLOW_JOBS" | jq -r 'select(.status == "failed") | .name' | wc -l)
            SUCCESS_COUNT=$(echo "$WORKFLOW_JOBS" | jq -r 'select(.status == "success") | .name' | wc -l)
            
            echo "Failed jobs: $FAILED_COUNT"
            echo "Successful jobs: $SUCCESS_COUNT"
            
            # IF-ELSE based on API results
            if [ "$FAILED_COUNT" -eq 0 ]; then
              echo "‚úÖ No failures detected via API"
            else
              echo "‚ùå $FAILED_COUNT job(s) failed"
              
              # List failed jobs
              echo "Failed jobs:"
              echo "$WORKFLOW_JOBS" | jq -r 'select(.status == "failed") | "  - \(.name)"'
              
              # Different actions based on failure count
              if [ "$FAILED_COUNT" -ge 3 ]; then
                echo "üö® Critical: 3 or more failures - escalating..."
              elif [ "$FAILED_COUNT" -eq 2 ]; then
                echo "‚ö†Ô∏è  Warning: 2 failures - sending alert..."
              else
                echo "‚ÑπÔ∏è  Notice: 1 failure - logging incident..."
              fi
              
              exit 1
            fi

  on-success-job:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Success handler
          command: |
            echo "‚úÖ Previous job succeeded!"

  always-run-job:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Always executes
          command: |
            echo "This job always runs (no requires clause)"

workflows:
  
  test-requires-logic:
    jobs:
      - always-run-job
      - job-success
      - job-fail
      - job-fail-2
      - job-random
      - notify:
          requires:
            - job-success: [failed, canceled, success]
            - job-fail: [failed, canceled, success]
            - job-fail-2: [failed, canceled, success]
            - job-random: [failed, canceled, success]
      - on-success-job:
          requires:
            - job-success: success
